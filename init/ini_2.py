import ConfigParser, uuid
import datetime, os, time
import json
import requests

API_ENDPOINT = "http://smh.unibague.edu.co/device"
Data  = '{ "uuid":"21456-54654-1321321", "fecha": "10/27/2018 17:11:04", "lat": 0, "long" : 0, "h_sonar":689, "X":[ 4,5,45,45,90 ], "Z":[ 4,5,45,45,90 ]}'

config = ConfigParser.RawConfigParser()

# When adding sections or items, add them in the reverse order of
# how you want them to be displayed in the actual file.
# In addition, please note that using RawConfigParser's and the raw
# mode of ConfigParser's respective set functions, you can assign
# non-string values to keys internally, but will receive an error
# when attempting to write to a file or when you get it in non-raw
# mode. SafeConfigParser does not allow such assignments to take place.
config.add_section('Station')
lat = 4.450127
long= -75.198839
h_sonar = 689
config.set('Station', 'lat', '4.450127')
config.set('Station', 'long', '-75.198839')
config.set('Station', 'h_sonar', '689') #676;715      # distance to zero water's mm
# First datetime
now = str(datetime.datetime.now())
config.set('Station', 'ini_date', now)
# make a UUID based on the host ID and current time
key = uuid.uuid1()
config.set('Station', 'uuid', str(key))      # station key
# sysyem path
config.set('Station','path_sys',str(os.getcwd()))

# Writing our configuration file to 'init.cfg'
with open('init.cfg', 'wb') as configfile:
    config.write(configfile)
# Sending config info
Times= time.strftime("%m")+"/"+time.strftime("%d")+"/"+time.strftime("%Y")+' '+time.strftime("%H")+':'+time.strftime("%M")+':'+time.strftime("%S")
data  = json.loads(Data)
data["uuid"]=str(key)
data["fecha"]=Times
data["lat"]=lat
data["long"]=long
data["h_sonar"]=h_sonar
X = [-0.5092,-0.5058,-0.5018,-0.5037,-0.5071,-0.5052,-0.5037,-0.5027,-0.5011,-0.5021,-0.5025,-0.5002,-0.5000,-0.5051,-0.5018,-0.5008,-0.4998,-0.4978,-0.4986,-0.5017,-0.5023,-0.5015,-0.5010,-0.4968,-0.4998,-0.4978,-0.5015,-0.4949,-0.4905,-0.4905,-0.4882,-0.4842,-0.4835,-0.4798,-0.4773,-0.4727,-0.4673,-0.4668,-0.4622,-0.4599,-0.4591,-0.4548,-0.4531,-0.4525,-0.4522,-0.4436,-0.4343,-0.4295,-0.4272,-0.4255,-0.4224,-0.4171,-0.4138,-0.4167,-0.4126,-0.4082,-0.4011,-0.3973,-0.3950,-0.3940,-0.3900,-0.3872,-0.3846,-0.3793,-0.3757,-0.3732,-0.3689,-0.3697,-0.3663,-0.3607,-0.3562,-0.3525,-0.3476,-0.3432,-0.3428,-0.3404,-0.3370,-0.3311,-0.3252,-0.3200,-0.3163,-0.3138,-0.3115,-0.3043,-0.3008,-0.2947,-0.2891,-0.2839,-0.2801,-0.2768,-0.2723,-0.2657,-0.2624,-0.2572,-0.2519,-0.2447,-0.2370,-0.2318,-0.2239,-0.2187,-0.2128,-0.2070,-0.1996,-0.1925,-0.1850,-0.1788,-0.1712,-0.1641,-0.1575,-0.1519,-0.1444,-0.1377,-0.1323,-0.1262,-0.1194,-0.1129,-0.1060,-0.0992,-0.0924,-0.0859,-0.0790,-0.0726,-0.0659,-0.0596,-0.0530,-0.0464,-0.0396,-0.0329,-0.0264,-0.0198,-0.0131,-0.0066,     0,0.0066,0.0131,0.0195,0.0260,0.0328,0.0395,0.0460,0.0525,0.0589,0.0651,0.0719,0.0784,0.0850,0.0917,0.0985,0.1052,0.1122,0.1195,0.1247,0.1320,0.1387,0.1460,0.1523,0.1586,0.1648,0.1714,0.1796,0.1868,0.1943,0.2009,0.2067,0.2125,0.2184,0.2244,0.2324,0.2397,0.2445,0.2497,0.2523,0.2556,0.2580,0.2610,0.2667,0.2721,0.2764,0.2801,0.2841,0.2892,0.2945,0.3011,0.3079,0.3136,0.3156,0.3196,0.3237,0.3271,0.3316,0.3368,0.3414,0.3471,0.3490,0.3546,0.3583,0.3622,0.3674,0.3718,0.3767,0.3807,0.3846,0.3876,0.3921,0.3968,0.4002,0.4074,0.4085,0.4122,0.4174,0.4213,0.4237,0.4265,0.4306,0.4357,0.4407,0.4408,0.4451,0.4482,0.4532,0.4555,0.4570,0.4642,0.4671,0.4697,0.4694,0.4785,0.4825,0.4844,0.4814,0.4885,0.4915,0.4945,0.4965,0.5015,0.5070,0.5098,0.5135,0.5145,0.5208,0.5266,0.5330,0.5361,0.5373,0.5436,0.5491,0.5545,0.5604,0.5667,0.5644,0.5633,0.5662,0.5695,0.5728,0.5766,0.5803,0.5846,0.5847,0.5831,0.5788,0.5850,0.5918,0.5905,0.5875,0.5915,0.5976,0.6016,0.5933,0.5995,0.6061,0.6027,0.6031,0.6086,0.6066,0.6063,0.6088,0.6089,0.6126,0.6156,0.6133,0.6169,0.6204,0.6228,0.6214,0.6286,0.6234]
Z=[0.7458,0.7436,0.7423,0.7316,0.7184,0.7137,0.7081,0.7016,0.6960,0.6861,0.6770,0.6722,0.6640,0.6462,0.6431,0.6357,0.6283,0.6226,0.6116,0.5963,0.5852,0.5769,0.5676,0.5654,0.5490,0.5424,0.5241,0.5264,0.5242,0.5131,0.5065,0.5034,0.4932,0.4893,0.4826,0.4806,0.4803,0.4692,0.4671,0.4596,0.4484,0.4455,0.4361,0.4240,0.4109,0.4182,0.4275,0.4256,0.4172,0.4069,0.4004,0.3995,0.3930,0.3695,0.3649,0.3612,0.3651,0.3596,0.3493,0.3353,0.3298,0.3205,0.3102,0.3085,0.3011,0.2899,0.2845,0.2618,0.2525,0.2509,0.2455,0.2372,0.2328,0.2264,0.2046,0.1896,0.1784,0.1769,0.1755,0.1712,0.1600,0.1431,0.1251,0.1287,0.1146,0.1133,0.1091,0.1030,0.0890,0.0720,0.0610,0.0608,0.0420,0.0329,0.0249,0.0278,0.0337,0.0237,0.0316,0.0218,0.0159,0.0090,0.0141,0.0172,0.0233,0.0195,0.0277,0.0320,0.0313,0.0216,0.0299,0.0313,0.0178,0.0112,0.0127,0.0112,0.0147,0.0162,0.0188,0.0164,0.0231,0.0187,0.0204,0.0132,0.0129,0.0117,0.0195,0.0204,0.0192,0.0191,0.0241,0.0220,0.0240,0.0120,0.0341,0.0381,0.0382,0.0274,0.0215,0.0257,0.0279,0.0322,0.0394,0.0337,0.0341,0.0334,0.0308,0.0272,0.0257,0.0202,0.0117,0.0292,0.0208,0.0204,0.0140,0.0176,0.0213,0.0250,0.0257,0.0126,0.0084,0.0023,0.0042,0.0110,0.0179,0.0238,0.0287,0.0198,0.0169,0.0288,0.0377,0.0615,0.0804,0.1031,0.1220,0.1251,0.1302,0.1402,0.1532,0.1642,0.1694,0.1736,0.1720,0.1694,0.1717,0.1897,0.1988,0.2070,0.2182,0.2244,0.2278,0.2332,0.2347,0.2497,0.2513,0.2596,0.2669,0.2695,0.2749,0.2785,0.2849,0.2913,0.3007,0.3052,0.3088,0.3163,0.3124,0.3265,0.3330,0.3348,0.3404,0.3498,0.3582,0.3629,0.3648,0.3667,0.3817,0.3855,0.3921,0.3941,0.4025,0.4129,0.4093,0.4160,0.4236,0.4376,0.4295,0.4335,0.4420,0.4614,0.4581,0.4638,0.4696,0.4772,0.4785,0.4789,0.4847,0.4887,0.4981,0.4968,0.4964,0.4952,0.5002,0.5087,0.5075,0.5082,0.5088,0.5086,0.5076,0.5223,0.5343,0.5394,0.5436,0.5478,0.5512,0.5546,0.5571,0.5665,0.5785,0.5946,0.5938,0.5921,0.6031,0.6166,0.6192,0.6184,0.6211,0.6420,0.6413,0.6398,0.6531,0.6607,0.6609,0.6717,0.6801,0.6843,0.6919,0.6945,0.6980,0.7087,0.7114,0.7141,0.7184,0.7275,0.7254,0.7392]
data["X"]=X
data["Z"]=Z
dataStreamSend = json.dumps(data)
r = requests.post(url = API_ENDPOINT, data = dataStreamSend)
# extracting response text
pastebin_url = r.text
print("The pastebin URL is:%s"%pastebin_url)

